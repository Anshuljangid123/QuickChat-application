import { generateToken } from "../lib/utils.js";
import User from "../models/User.js";
import bcrypt from "bcryptjs";


// signup new user 
export const signup = async(req , res) => {
    const {fullName , email , password , bio} = req.body;

    try{
        // whether these data are available or not 
        if(!fullName || !email || !password || !bio ) {
            return res.json({success: false , message : "missing details "})
        }

        const user = await User.findOne({email}) ; 

        if(user){
            // user already exist 
            return res.json({success : false  , message : "account already exists"})
        }

        // if the new user come  , generate encripted password 

        // for the new user we are encrypting the password , using the salt and given password string using the bcrupt library 

        const salt = await bcrypt.genSalt(10) ;
        const hashedPassword = await bcrypt.hash(password , salt);

        const newUser = await User.create({
            fullName , email , password : hashedPassword  , bio 
        });

        // creat token 
        // _id is auto generated by the mongo db which here we used in token generation . 
        const token = generateToken(newUser._id); // to generate a token we required a user id .

        res.json({success : true , userData : newUser , token , message : "account created successfully "});

    }catch(error){
        res.json({success : false , message : error.message});
        console.log(error.message);
        
    }
}